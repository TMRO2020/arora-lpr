policy_module(arora, 1.100.1)

########################################
#
# Declarations
#

type lpr_t;
type lpr_exec_t;
init_daemon_domain(lpr_t, lpr_exec_t)

permissive lpr_t;

type lpr_initrc_exec_t;
init_script_file(lpr_initrc_exec_t)

type lpr_conf_t;
files_type(lpr_conf_t)

type lpr_var_lib_t;
files_type(lpr_var_lib_t)

type lpr_var_run_t;
files_type(lpr_var_run_t)

type lpr_port_t;
corenet_port(lpr_port_t)

########################################
#
# arora local policy
#
allow lpr_t self:process { fork };

allow lpr_t self:fifo_file rw_fifo_file_perms;
allow lpr_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(lpr_t, lpr_conf_t, lpr_conf_t)
manage_files_pattern(lpr_t, lpr_conf_t, lpr_conf_t)

manage_dirs_pattern(lpr_t, lpr_var_lib_t, lpr_var_lib_t)
manage_files_pattern(lpr_t, lpr_var_lib_t, lpr_var_lib_t)
files_var_lib_filetrans(lpr_t, lpr_var_lib_t, { dir file })

manage_dirs_pattern(lpr_t, lpr_var_run_t, lpr_var_run_t)
manage_files_pattern(lpr_t, lpr_var_run_t, lpr_var_run_t)

sysnet_dns_name_resolve(lpr_t)
corenet_all_recvfrom_unlabeled(lpr_t)

allow lpr_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(lpr_t)
corenet_tcp_sendrecv_generic_node(lpr_t)
corenet_tcp_sendrecv_all_ports(lpr_t)
corenet_tcp_bind_generic_node(lpr_t)

gen_require(`
    type lpr_port_t;
')
allow lpr_t lpr_port_t:tcp_socket name_bind;

gen_require(`
    type lpr_port_t;
')
allow lpr_t lpr_port_t:tcp_socket name_connect;

domain_use_interactive_fds(lpr_t)

files_read_etc_files(lpr_t)

miscfiles_read_localization(lpr_t)

sysnet_dns_name_resolve(lpr_t)

allow lpr_t lpr_exec_t:file execute_no_trans;
allow lpr_t self:process setsched;
corecmd_exec_ls(lpr_t)
corenet_tcp_connect_http_port(lpr_t)
dev_read_urand(lpr_t)
fs_getattr_xattr_fs(lpr_t)
kernel_read_system_state(lpr_t)
